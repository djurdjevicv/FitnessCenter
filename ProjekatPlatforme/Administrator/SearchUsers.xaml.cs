using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace ProjekatPlatforme.Administrator
{
    /// <summary>
    /// Interaction logic for SearchUsers.xaml
    /// </summary>
    public partial class SearchUsers : Window
    {
        ICollectionView view;
        public SearchUsers()
        {
            InitializeComponent();
        }

        private void dataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dataGrid.Columns[4].Visibility = System.Windows.Visibility.Hidden;
        }

        private void ButtonBack(object sender, RoutedEventArgs e)
        {
            AdminMenu admin = new AdminMenu();
            this.Visibility = Visibility.Hidden;
            admin.Show();
        }


        private void ButtonSearch(object sender, RoutedEventArgs e)
        {
            if (coach.IsSelected)
            {
                List<object> coachList = new List<object>();
                List<object> coachAddressList = new List<object>();

                if (firstName_txt.Text == "" && lastName_txt.Text == "" && email_txt.Text == "" && address_txt.Text == "")
                {
                    MessageBox.Show("Please enter one parameter!");
                }
                else
                {
                    if (address_txt.Text == "")
                    {
                        foreach (Users.Coach coach in Application.Instance.Coaches)
                        {
                            if ((coach.FirstName.ToUpper() == (firstName_txt.Text).ToUpper() || firstName_txt.Text == "") &&
                                (coach.LastName.ToUpper() == (lastName_txt.Text).ToUpper() || lastName_txt.Text == "") &&
                                (coach.Email.ToUpper() == (email_txt.Text).ToUpper() || email_txt.Text == ""))
                            {
                                coachList.Add(coach);
                            }
                        }
                    }
                    else if (address_txt.Text != "")
                    {
                        foreach (Address.Address address in Application.Instance.Addresses)
                        {
                            if (address_txt.Text.ToUpper() == address.Street.ToUpper())
                            {
                                int addressId = address.IDAddress;
                                foreach (Users.Coach coach in Application.Instance.Coaches)
                                {
                                    if (coach.IDAddress == addressId && coach.UserType == Users.EUserType.coach)
                                    {
                                        if ((coach.FirstName.ToUpper() == (firstName_txt.Text).ToUpper() || firstName_txt.Text == "") &&
                                            (coach.LastName.ToUpper() == (lastName_txt.Text).ToUpper() || lastName_txt.Text == "") &&
                                            (coach.Email.ToUpper() == (email_txt.Text).ToUpper() || email_txt.Text == ""))
                                        {
                                            coachAddressList.Add(coach);
                                        }

                                    }
                                }
                            }
                        }
                    }

                    if (coachAddressList.Count > 0)
                    {
                        view = CollectionViewSource.GetDefaultView(coachAddressList);
                        dataGrid.ItemsSource = view;
                        dataGrid.IsSynchronizedWithCurrentItem = true;
                    }
                    else
                    {
                        view = CollectionViewSource.GetDefaultView(coachList);
                        dataGrid.ItemsSource = view;
                        dataGrid.IsSynchronizedWithCurrentItem = true;
                    }
                }


            }
            else if(beginner.IsSelected)
            {
                List<object> beginnerList = new List<object>();
                List<object> beginnerAddressList = new List<object>();

                if (firstName_txt.Text == "" && lastName_txt.Text == "" && email_txt.Text == "" && address_txt.Text == "")
                {
                    MessageBox.Show("Please enter one parameter!");
                }
                else
                {
                    if (address_txt.Text == "")
                    {
                        foreach (Users.Beginner beginner in Application.Instance.Beginners)
                        {
                            if ((beginner.FirstName.ToUpper() == (firstName_txt.Text).ToUpper() || firstName_txt.Text == "") &&
                                (beginner.LastName.ToUpper() == (lastName_txt.Text).ToUpper() || lastName_txt.Text == "") &&
                                (beginner.Email.ToUpper() == (email_txt.Text).ToUpper() || email_txt.Text == ""))
                            {
                                beginnerList.Add(beginner);
                            }
                        }
                    }
                    else if (address_txt.Text != "")
                    {
                        foreach (Address.Address address in Application.Instance.Addresses)
                        {
                            if (address_txt.Text.ToUpper() == address.Street.ToUpper())
                            {
                                int addressId = address.IDAddress;
                                foreach (Users.Beginner beginner in Application.Instance.Beginners)
                                {
                                    if (beginner.IDAddress == addressId && beginner.UserType == Users.EUserType.beginner)
                                    {
                                        if ((beginner.FirstName.ToUpper() == (firstName_txt.Text).ToUpper() || firstName_txt.Text == "") &&
                                            (beginner.LastName.ToUpper() == (lastName_txt.Text).ToUpper() || lastName_txt.Text == "") &&
                                            (beginner.Email.ToUpper() == (email_txt.Text).ToUpper() || email_txt.Text == ""))
                                        {
                                            beginnerAddressList.Add(beginner);
                                        }

                                    }
                                }
                            }
                        }
                    }

                    if (beginnerAddressList.Count > 0)
                    {
                        view = CollectionViewSource.GetDefaultView(beginnerAddressList);
                        dataGrid.ItemsSource = view;
                        dataGrid.IsSynchronizedWithCurrentItem = true;
                    }
                    else
                    {
                        view = CollectionViewSource.GetDefaultView(beginnerList);
                        dataGrid.ItemsSource = view;
                        dataGrid.IsSynchronizedWithCurrentItem = true;
                    }
                }



            }
            else if(!beginner.IsSelected && !coach.IsSelected)
            {
                MessageBox.Show("Please select type of user", "Failed", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }
}
